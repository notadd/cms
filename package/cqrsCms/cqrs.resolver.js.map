{"version":3,"sources":["cqrsCms/cqrs.resolver.ts"],"names":[],"mappings":"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","file":"cqrs.resolver.js","sourcesContent":["import { Mutation, Query, Resolver } from \"@nestjs/graphql\";\nimport { ArticleEntity } from \"../entity/article.entity\";\nimport { PageContentEntity } from \"../entity/page.content.entity\";\nimport { PageEntity } from \"../entity/page.entity\";\nimport { PagerService } from \"../export/common.paging\";\nimport { ContentMap } from \"./common/param.dto\";\nimport { CqrsService } from \"./cqrs.service\";\nimport { MessageCodeError } from \"./errorMessage/error.interface\";\nimport { ArticleCurdVm } from \"./models/view/article-curd.vm\";\nimport { ClassifyCurdVm } from \"./models/view/classify-curd.vm\";\nimport { CreatePageVm } from \"./models/view/create-page.vm\";\nimport { CreateXmlVm } from \"./models/view/create-xml-vm\";\nimport { GetPageVm } from \"./models/view/get-page.vm\";\nimport { ClassifyService } from \"./service/classify.service\";\n\n@Resolver()\nexport class CqrsResolver {\n    constructor(\n        private readonly classifyService: ClassifyService,\n        private readonly sitemapService: CqrsService,\n        private readonly pagerService: PagerService) {\n    }\n\n    /**\n     * 创建地图xml文件\n     * @param obj\n     * @param arg\n     * @returns {Promise<CreateParamDto>}\n     */\n    @Query()\n    async createFile(obj, arg) {\n        const str: string = JSON.stringify(arg);\n        const bToJSon = JSON.parse(str);\n        let map = new Map();\n        map = this.objToStrMap(bToJSon);\n        const createxml: CreateXmlVm = map.get(\"buildxml\");\n        const result = this.sitemapService.createXml(createxml);\n        return result;\n    }\n\n    /**\n     * 修改地图xml文件\n     * @param obj\n     * @param arg\n     * @returns {Promise<CreateParamDto>}\n     */\n    @Query()\n    async updateFile(obj, arg) {\n        const str: string = JSON.stringify(arg);\n        const bToJSon = JSON.parse(str);\n        let map = new Map();\n        map = this.objToStrMap(bToJSon);\n        const createxml: CreateXmlVm = map.get(\"updateFile\");\n        const result = this.sitemapService.updateXml();\n        return createxml;\n    }\n\n    /**\n     * 文章分页的查询方法\n     * @param obj\n     * @param arg\n     * @returns {Promise<ArticleEntity[]>}\n     */\n\n    @Query()\n    async getArticlesLimit(obj, body: {\n        getArticleAll: { hidden: boolean, limitNum: number, pages: number },\n        recycleFind: { limitNum: number, pages: number }, reductionGetByClassifyId: { id: number, limitNum: number, pages: number },\n        findTopPlace: { limitNum: number, pages: number }, serachArticle: { keyWords: string, classifyId: number, topPlace: boolean, limitNum: number, pages: number },\n        keywordSearch: { keyWords: string, limitNum: number, pages: number }\n    }) {\n        const { getArticleAll, recycleFind, reductionGetByClassifyId, findTopPlace, serachArticle, keywordSearch } = body;\n        let result: Array<ArticleEntity>;\n        const articleVM: ArticleCurdVm = new ArticleCurdVm();\n        if (getArticleAll !== null && getArticleAll !== undefined) {\n            articleVM.getArticles = { getArticleAll: true, hidden: getArticleAll.hidden };\n            articleVM.limitNum = getArticleAll.limitNum;\n            articleVM.pages = getArticleAll.pages;\n        }\n        if (recycleFind !== null && recycleFind !== undefined) {\n            articleVM.getArticles = { recycleFind: true };\n            articleVM.limitNum = recycleFind.limitNum;\n            articleVM.pages = recycleFind.pages;\n        }\n        if (reductionGetByClassifyId !== null && reductionGetByClassifyId !== undefined) {\n            articleVM.getArticles = { reductionGetByClassifyId: reductionGetByClassifyId.id };\n            articleVM.limitNum = reductionGetByClassifyId.limitNum;\n            articleVM.pages = reductionGetByClassifyId.pages;\n        }\n        if (findTopPlace !== null && findTopPlace !== undefined) {\n            articleVM.getArticles = { findTopPlace: true };\n            articleVM.limitNum = findTopPlace.limitNum;\n            articleVM.pages = findTopPlace.pages;\n        }\n        if (serachArticle !== null && serachArticle !== undefined) {\n            let keyWords: string = serachArticle.keyWords;\n            const limitNum: number = serachArticle.limitNum;\n            const pages: number = serachArticle.pages;\n            const groupId: number = serachArticle.classifyId;\n            const findTop: boolean = serachArticle.topPlace;\n            if (!keyWords) { keyWords = \"\"; }\n            articleVM.getArticles = { getArticleByClassifyId: { classifyId: groupId, top: findTop, name: keyWords } };\n            articleVM.limitNum = limitNum;\n            articleVM.pages = pages;\n        }\n        if (keywordSearch !== null && keywordSearch !== undefined) {\n            let amap = new Map();\n            amap = this.objToStrMap(keywordSearch);\n            const keyWords: string = keywordSearch.keyWords;\n            articleVM.getArticles = { keywordSearch: { keywords: keyWords } };\n            articleVM.limitNum = keywordSearch.limitNum;\n            articleVM.pages = keywordSearch.pages;\n        }\n        articleVM.getAllArticles = true;\n        const resultArt = await this.sitemapService.articleCurd(articleVM);\n        const paging = this.pagerService.getPager(resultArt.totalItems, articleVM.pages, articleVM.limitNum);\n        result = await this.classifyService.TimestampArt(resultArt.articles);\n        return { pagination: paging, articles: result };\n\n    }\n\n    /**\n     * 不分页获取文章\n     * @param obj\n     * @param argclassify_curd\n     * @returns {Promise<any>}\n     */\n    @Query()\n    async getArticlesNoLimit(obj, body: { getArticleById: { id: number }, showNext: { id: number }, superiorArticle: { id: number }, getCurrentClassifyArticles: { id: number } }) {\n        const { getArticleById, showNext, superiorArticle, getCurrentClassifyArticles } = body;\n        let result: Array<ArticleEntity>;\n        const articleVM: ArticleCurdVm = new ArticleCurdVm();\n        if (showNext !== null && showNext !== undefined) {\n            articleVM.getArticles = { showNext: showNext.id };\n        }\n        if (getArticleById !== null && getArticleById !== undefined) {\n            articleVM.getArticles = { getArticleById: getArticleById.id };\n        }\n        if (superiorArticle !== null && superiorArticle !== undefined) {\n            articleVM.getArticles = { superiorArticle: superiorArticle.id };\n        }\n        if (getCurrentClassifyArticles !== null && getCurrentClassifyArticles !== undefined) {\n            articleVM.getArticles = { getCurrentClassifyArticles: getCurrentClassifyArticles.id };\n        }\n        /*未定是否开放*/\n        /*  let getLevelByClassifyId=map.get(\"getLevelByClassifyId\");\n          if(getLevelByClassifyId!==null && getLevelByClassifyId !==undefined){\n              let amap=new Map();\n              amap=this.objToStrMap(getLevelByClassifyId);\n              articleVM.getArticles={getLevelByClassifyId:amap.get(\"id\")};\n             /!* const result=this.articleService.getLevelByClassifyId(amap.get(\"id\"));\n              return result;*!/\n          }*/\n        articleVM.getAllArticles = true;\n        const entity = await this.sitemapService.articleCurd(articleVM);\n        result = await this.classifyService.TimestampArt(entity.articles);\n        return result;\n\n    }\n\n    /**\n     * 获取分类\n     * @param obj\n     * @param arg\n     * @returns {any}\n     */\n    @Query()\n    getClassifys(obj, body: { getAllClassify: { useFor: string, id: number } }) {\n        const { getAllClassify } = body;\n        let result;\n        const classifyVM: ClassifyCurdVm = new ClassifyCurdVm();\n        if (getAllClassify !== null && getAllClassify !== undefined) {\n            const useFor: string = getAllClassify.useFor;\n            let id: number = getAllClassify.id;\n            if (id === null && id === 0) {\n                id = 1;\n            }\n            classifyVM.useFor = useFor;\n            classifyVM.getAllClassify = true;\n        }\n        result = this.sitemapService.getClassify(classifyVM);\n        return result;\n    }\n\n    @Query()\n    async getClassifyById(obj, body: { getClassifyById: { useFor: string, id: number } }) {\n        const { getClassifyById } = body;\n        let result;\n        const classifyVM: ClassifyCurdVm = new ClassifyCurdVm();\n        if (getClassifyById !== null && getClassifyById !== undefined) {\n            const usedFor: string = getClassifyById.useFor;\n            let idNum: number = getClassifyById.id;\n            if (idNum === null && idNum === 0) {\n                idNum = 1;\n            }\n            classifyVM.getClassifyById = { useFor: usedFor, id: idNum };\n        }\n        result = await this.sitemapService.getClassify(classifyVM);\n        return result;\n    }\n\n    /**\n     * 获取页面\n     * @param obj\n     * @param arg\n     * @returns {Promise<PageEntity[]>}\n     */\n    @Query()\n    async getPagesLimit(obj, arg) {\n        const str: string = JSON.stringify(arg);\n        const bToJSon = JSON.parse(str);\n        let map = new Map();\n        map = this.objToStrMap(bToJSon);\n        const getAllPage = map.get(\"getAllPage\");\n        const pageParam: GetPageVm = new GetPageVm();\n        if (getAllPage !== null && getAllPage !== undefined) {\n            let amap = new Map();\n            amap = this.objToStrMap(getAllPage);\n            pageParam.getAll = true;\n            pageParam.limit = amap.get(\"limitNum\");\n            pageParam.pages = amap.get(\"pages\");\n        }\n        const serachPages = map.get(\"serachPages\");\n        if (serachPages !== null && serachPages !== undefined) {\n            let amap = new Map();\n            amap = this.objToStrMap(serachPages);\n            pageParam.keywords = amap.get(\"keywords\");\n            pageParam.limit = amap.get(\"limitNum\");\n            pageParam.pages = amap.get(\"pages\");\n        }\n        const getPagesByClassifyId = map.get(\"getPagesByClassifyId\");\n        if (getPagesByClassifyId !== null && getPagesByClassifyId !== undefined) {\n            let amap = new Map();\n            amap = this.objToStrMap(getPagesByClassifyId);\n            pageParam.classifyId = amap.get(\"id\");\n            pageParam.limit = amap.get(\"limitNum\");\n            pageParam.pages = amap.get(\"pages\");\n        }\n\n        const resultPage = await this.sitemapService.getPages(pageParam).then(a => {\n            return a;\n        });\n        const paging = this.pagerService.getPager(resultPage.totalItems, pageParam.pages, pageParam.limit);\n        return { pagination: paging, pages: resultPage.pages };\n    }\n\n    /**\n     * 获取单个页面\n     * @param obj\n     * @param arg\n     * @returns {Promise<PageEntity[]>}\n     */\n    @Query()\n    getPageById(obj, arg) {\n        const str: string = JSON.stringify(arg);\n        const bToJSon = JSON.parse(str);\n        let map = new Map();\n        map = this.objToStrMap(bToJSon);\n        const findPageById = map.get(\"findPageById\");\n        if (findPageById !== null && findPageById !== undefined) {\n            let amap = new Map();\n            amap = this.objToStrMap(findPageById);\n            const pageParam: GetPageVm = new GetPageVm();\n            pageParam.id = amap.get(\"id\");\n            const result = this.sitemapService.getPages(pageParam);\n            return result;\n        }\n    }\n\n    /**\n     * 文章的增加和修改\n     * @param obj\n     * @param arg\n     * @returns {Promise<string>}\n     * @constructor\n     */\n    @Mutation()\n    async ArticleCU(obj, arg) {\n        const str: string = JSON.stringify(arg);\n        const bToJSon = JSON.parse(str);\n        let map = new Map();\n        map = this.objToStrMap(bToJSon);\n        const createArt = map.get(\"createArt\");\n        const articleVM: ArticleCurdVm = new ArticleCurdVm();\n        articleVM.limitNum = map.get(\"limitNum\");\n        articleVM.pages = map.get(\"pages\");\n        articleVM.hidden = map.get(\"hidden\");\n        if (createArt !== null && createArt !== undefined) {\n            const art: ArticleEntity = createArt;\n            if (art.publishedTime) {\n                const date: string = art.publishedTime.toString();\n                art.publishedTime = new Date(Date.parse(date.replace(/- /g, \"/\")));\n            } else {\n                art.publishedTime = undefined;\n            }\n            if (art.endTime) {\n                const endTime: string = art.endTime.toString();\n                art.endTime = new Date(Date.parse(endTime.replace(/- /g, \"/\")));\n            }\n            if (art.startTime) {\n                const startTime: string = art.startTime.toString();\n                art.startTime = new Date(Date.parse(startTime.replace(/- /g, \"/\")));\n            }\n            const newArticle: ArticleEntity = art;\n            articleVM.createArticle = { article: newArticle };\n        }\n        const updateArt = map.get(\"updateArt\");\n        if (updateArt !== null && updateArt !== undefined) {\n            const art: ArticleEntity = updateArt;\n            if (art.publishedTime) {\n                const date: string = art.publishedTime.toString();\n                art.publishedTime = new Date(Date.parse(date.replace(/- /g, \"/\")));\n            }\n            if (art.startTime) {\n                const startTime: string = art.startTime.toString();\n                art.startTime = new Date(Date.parse(startTime.replace(/- /g, \"/\")));\n            }\n            if (art.endTime) {\n                const endTime: string = art.endTime.toString();\n                art.endTime = new Date(Date.parse(endTime.replace(/- /g, \"/\")));\n            }\n            const newArticle: ArticleEntity = art;\n            articleVM.updateArticle = { article: newArticle };\n\n        }\n        const deleteById = map.get(\"deleteById\");\n        if (deleteById !== null && deleteById !== undefined) {\n            let amap = new Map();\n            amap = this.objToStrMap(deleteById);\n            const array: [ number ] = amap.get(\"id\");\n            articleVM.deleteById = array;\n        }\n        const recycleDelete = map.get(\"recycleDelete\");\n        if (recycleDelete !== null && recycleDelete !== undefined) {\n            let amap = new Map();\n            amap = this.objToStrMap(recycleDelete);\n            const array: [ number ] = amap.get(\"id\");\n            articleVM.recycleDelete = array;\n        }\n        const reductionArticle = map.get(\"reductionArticle\");\n        if (reductionArticle !== null && reductionArticle !== undefined) {\n            let amap = new Map();\n            amap = this.objToStrMap(reductionArticle);\n            const array: [ number ] = amap.get(\"id\");\n            articleVM.reductionArticle = array;\n        }\n        /*批量反向置顶,暂不修改*/\n        const classifyTopPlace = map.get(\"classifyTopPlace\");\n        if (classifyTopPlace !== null && classifyTopPlace !== undefined) {\n            let amap = new Map();\n            amap = this.objToStrMap(classifyTopPlace);\n            const id = amap.get(\"id\");\n            const num = await this.classifyService.classifyTopPlace(id, amap.get(\"display\"));\n            const result = `成功将${num}条数据置顶`;\n            return result;\n        }\n        const pictureUpload = map.get(\"pictureUpload\");\n        if (pictureUpload !== null && pictureUpload !== undefined) {\n            let amap = new Map();\n            amap = this.objToStrMap(pictureUpload);\n            const ws = new Map();\n            ws.set(\"obj\", obj);\n            articleVM.pictureUpload = {\n                bucketName: amap.get(\"bucketName\"),\n                rawName: amap.get(\"rawName\"),\n                base64: amap.get(\"base64\"),\n                url: ws,\n                id: amap.get(\"id\"),\n            };\n        }\n        const result = await this.sitemapService.articleCurd(articleVM);\n        return JSON.stringify(result);\n    }\n\n    /**\n     * 分类的增加、修改 分文章和页面两种\n     * @param obj\n     * @param arg\n     * @returns {any}\n     * @constructor\n     */\n    @Mutation()\n    async ClassifyCU(obj, arg) {\n        const str: string = JSON.stringify(arg);\n        const bToJSon = JSON.parse(str);\n        let map = new Map();\n        map = this.objToStrMap(bToJSon);\n        const createArt = map.get(\"createClass\");\n        const classifyVM: ClassifyCurdVm = new ClassifyCurdVm();\n        if (createArt !== null && createArt !== undefined) {\n            let amap = new Map();\n            amap = this.objToStrMap(createArt);\n            const useFor: string = amap.get(\"useFor\");\n            let id: number = amap.get(\"id\");\n            if (id === null && id === 0) {\n                id = 1;\n            }\n            classifyVM.useFor = useFor;\n            if (useFor === \"art\") {\n                classifyVM.createClassify = { art: amap.get(\"createClass\") };\n            }\n            if (useFor === \"page\") {\n                classifyVM.createClassify = { page: amap.get(\"createClass\") };\n            }\n        }\n        const updateClass = map.get(\"updateClass\");\n        if (updateClass !== null && updateClass !== undefined) {\n            let amap = new Map();\n            amap = this.objToStrMap(updateClass);\n            const useFor: string = amap.get(\"useFor\");\n            let id: number = amap.get(\"id\");\n            if (id === null && id === 0) {\n                id = 1;\n            }\n            classifyVM.useFor = useFor;\n            if (useFor === \"art\") {\n                classifyVM.updateClassify = { art: amap.get(\"updateClass\") };\n            }\n            if (useFor === \"page\") {\n                classifyVM.updateClassify = { page: amap.get(\"updateClass\") };\n            }\n        }\n        const deleteClassifyById = map.get(\"deleteClassifyById\");\n        if (deleteClassifyById !== null && deleteClassifyById !== undefined) {\n            let amap = new Map();\n            amap = this.objToStrMap(deleteClassifyById);\n            const useFor: string = amap.get(\"useFor\");\n            let id: number = amap.get(\"id\");\n            if (id === null && id === 0) {\n                id = 1;\n            }\n            if (id === 1) { throw new MessageCodeError(\"drop:table:ById1\"); }\n            classifyVM.useFor = useFor;\n            classifyVM.deleteClassify = id;\n        }\n        const mobileTheClassify = map.get(\"mobileTheClassify\");\n        if (mobileTheClassify !== null && mobileTheClassify !== undefined) {\n            let amap = new Map();\n            amap = this.objToStrMap(mobileTheClassify);\n            const useFor: string = amap.get(\"useFor\");\n            const idNum: number = amap.get(\"id\");\n            let parentIdNum: number = amap.get(\"parentId\");\n            if (parentIdNum === null && parentIdNum === 0) {\n                parentIdNum = 1;\n            }\n            classifyVM.useFor = useFor;\n            classifyVM.mobileClassifyId = { id: idNum, parentId: parentIdNum };\n        }\n        const result = await this.sitemapService.classifyCurd(classifyVM);\n        return JSON.stringify(result);\n    }\n\n    @Mutation()\n    async PageCUD(obj, arg) {\n        const str: string = JSON.stringify(arg);\n        const bToJSon = JSON.parse(str);\n        let map = new Map();\n        map = this.objToStrMap(bToJSon);\n        const createPages = map.get(\"createPages\");\n        const createParam: CreatePageVm = new CreatePageVm();\n        if (createPages !== null && createPages !== undefined) {\n            let amap = new Map();\n            amap = this.objToStrMap(createPages);\n            const page = new PageEntity();\n            page.title = amap.get(\"title\");\n            page.alias = amap.get(\"alias\");\n            page.classify = amap.get(\"classify\");\n            page.classifyId = amap.get(\"classifyId\");\n            const contents: Array<PageContentEntity> = [];\n            const strFinal: Array<string> = amap.get(\"content\");\n            for (const t in strFinal) {\n                const newContent: PageContentEntity = new PageContentEntity();\n                newContent.content = strFinal[ t ];\n                contents.push(newContent);\n            }\n            createParam.page = page;\n            createParam.content = contents;\n            createParam.limit = amap.get(\"limitNum\");\n            createParam.pages = amap.get(\"pages\");\n        }\n        const updatePages = map.get(\"updatePages\");\n        if (updatePages !== null && updatePages !== undefined) {\n            let amap = new Map();\n            amap = this.objToStrMap(updatePages);\n            const page: PageEntity = new PageEntity();\n            page.id = amap.get(\"id\");\n            page.title = amap.get(\"title\");\n            page.alias = amap.get(\"alias\");\n            page.classify = amap.get(\"classify\");\n            page.classifyId = amap.get(\"classifyId\");\n            const contents: Array<PageContentEntity> = [];\n            const strFinal: Array<ContentMap> = amap.get(\"content\");\n            for (const t in strFinal) {\n                const newContent: PageContentEntity = new PageContentEntity();\n                let amap = new Map();\n                amap = this.objToStrMap(strFinal[ t ]);\n                newContent.content = amap.get(\"content\");\n                newContent.id = amap.get(\"id\");\n                contents.push(newContent);\n            }\n            createParam.page = page;\n            createParam.content = contents;\n            createParam.limit = amap.get(\"limitNum\");\n            createParam.pages = amap.get(\"pages\");\n        }\n        const deletePages = map.get(\"deletePages\");\n        if (deletePages !== null && deletePages !== undefined) {\n            let amap = new Map();\n            amap = this.objToStrMap(deletePages);\n            const array: [ number ] = amap.get(\"id\");\n            createParam.limit = amap.get(\"limitNum\");\n            createParam.pages = amap.get(\"pages\");\n            createParam.array = array;\n        }\n        const result = await this.sitemapService.pageCurd(createParam);\n        return JSON.stringify(result);\n    }\n\n    /**\n     * JSON----Map\n     * @param obj\n     * @returns {Map<string, string>}\n     */\n    objToStrMap(obj): Map<string, string> {\n        const strMap = new Map();\n        if (obj) {\n            for (const k of Object.keys(obj)) {\n                strMap.set(k, obj[ k ]);\n            }\n        }\n        return strMap;\n    }\n\n}\n"]}