{"version":3,"sources":["cqrsCms/commands/handlers/page-curd.handler.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,uCAA+E;AAC/E,oEAAiE;AACjE,6DAAyD;AACzD,mEAA8D;AAG9D,IAAa,iBAAiB,GAA9B;IACI,YACqB,UAA0B,EAC1B,SAAyB,EACzB,WAAwB;QAFxB,eAAU,GAAV,UAAU,CAAgB;QAC1B,cAAS,GAAT,SAAS,CAAgB;QACzB,gBAAW,GAAX,WAAW,CAAa;IAE7C,CAAC;IAEK,OAAO,CAAC,OAAyB,EAAE,QAA0B;;YAC/D,MAAM,EAAE,GAAG,GAAG,CAAC;YACf,IAAI,MAAM,CAAC;YACX,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;YAC/E,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,EAAE;gBAC3B,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC7G,IAAI,MAAM,CAAC,QAAQ,EAAE;oBACjB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;iBACvC;aACJ;iBAAM;gBACH,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;aACvC;YACD,QAAQ,CAAC,MAAM,CAAC,CAAC;YACjB,IAAI,CAAC,MAAM,EAAE,CAAC;QAClB,CAAC;KAAA;CACJ,CAAA;AAvBY,iBAAiB;IAD7B,qBAAc,CAAC,qCAAgB,CAAC;qCAGI,+BAAc;QACf,qBAAc;QACZ,0BAAW;GAJpC,iBAAiB,CAuB7B;AAvBY,8CAAiB","file":"page-curd.handler.js","sourcesContent":["import { CommandHandler, EventPublisher, ICommandHandler } from \"@nestjs/cqrs\";\nimport { PageRepository } from \"../../repository/pageRepository\";\nimport { PageService } from \"../../service/page.service\";\nimport { PageParamCommand } from \"../impl/page-param.command\";\n\n@CommandHandler(PageParamCommand)\nexport class CreatePageHandler implements ICommandHandler<PageParamCommand> {\n    constructor(\n        private readonly repositoty: PageRepository,\n        private readonly publisher: EventPublisher,\n        private readonly pageService: PageService,\n    ) {\n    }\n\n    async execute(command: PageParamCommand, resolver: (value?) => void): Promise<any> {\n        const id = \"0\";\n        let result;\n        const page = this.publisher.mergeObjectContext(await this.repositoty.find(id));\n        if (!command.pageEntity.array) {\n            result = await this.pageService.curdCheck(command.pageEntity.page.alias, command.pageEntity.page.classifyId);\n            if (result.Continue) {\n                page.createPage(command.pageEntity);\n            }\n        } else {\n            page.createPage(command.pageEntity);\n        }\n        resolver(result);\n        page.commit();\n    }\n}\n"]}