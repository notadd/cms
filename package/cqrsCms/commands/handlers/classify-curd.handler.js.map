{"version":3,"sources":["cqrsCms/commands/handlers/classify-curd.handler.ts"],"names":[],"mappings":"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","file":"classify-curd.handler.js","sourcesContent":["import { CommandHandler, EventPublisher, ICommandHandler } from \"@nestjs/cqrs\";\nimport { PageRepository } from \"../../repository/pageRepository\";\nimport { ClassifyService } from \"../../service/classify.service\";\nimport { ClassifyParamCommand } from \"../impl/classify-param.command\";\n\n@CommandHandler(ClassifyParamCommand)\nexport class ClassifyCurdHandler implements ICommandHandler<ClassifyParamCommand> {\n    constructor(private readonly repositoty: PageRepository,\n                private readonly publisher: EventPublisher,\n                private readonly classifyService: ClassifyService) {\n    }\n\n    async execute(command: ClassifyParamCommand, resolver: (value?) => void): Promise<any> {\n        const id = \"0\";\n        const page = this.publisher.mergeObjectContext(await this.repositoty.find(id));\n        let value, messageCodeError;\n        if (!command.classify.getAllClassify) {\n            /*增加、修改、删除、移动分类*/\n            if (command.classify.createClassify) {\n                if (command.classify.createClassify.art) {\n                    const result = await this.classifyService.classifyCheck(\n                        command.classify.useFor,\n                        command.classify.createClassify.art.id,\n                        command.classify.createClassify.art.groupId,\n                        command.classify.createClassify.art.classifyAlias);\n                    value = result.Continue;\n                    messageCodeError = result.MessageCodeError;\n                }\n                if (command.classify.createClassify.page) {\n                    const result = await this.classifyService.classifyCheck(\n                        command.classify.useFor,\n                        command.classify.createClassify.page.id,\n                        command.classify.createClassify.page.groupId,\n                        command.classify.createClassify.page.classifyAlias);\n                    value = result.Continue;\n                    messageCodeError = result.MessageCodeError;\n                }\n            }\n            if (command.classify.updateClassify) {\n                if (command.classify.updateClassify.page) {\n                    const result = await this.classifyService.classifyCheck(\n                        command.classify.useFor,\n                        command.classify.updateClassify.page.id,\n                        command.classify.updateClassify.page.groupId,\n                        command.classify.updateClassify.page.classifyAlias);\n                    value = result.Continue;\n                    messageCodeError = result.MessageCodeError;\n                }\n                if (command.classify.updateClassify.art) {\n                    const result = await this.classifyService.classifyCheck(\n                        command.classify.useFor,\n                        command.classify.updateClassify.art.id,\n                        command.classify.updateClassify.art.groupId,\n                        command.classify.updateClassify.art.classifyAlias);\n                    value = result.Continue;\n                    messageCodeError = result.MessageCodeError;\n                }\n\n            }\n            if (command.classify.mobileClassifyId) {\n                const result = await this.classifyService.classifyCheck(command.classify.useFor,\n                    command.classify.mobileClassifyId.id,\n                    command.classify.mobileClassifyId.parentId);\n                value = result.Continue;\n                messageCodeError = result.MessageCodeError;\n            }\n            if (command.classify.deleteClassify) {\n                const result = await this.classifyService.classifyCheck(command.classify.useFor, 0, 0, \"\", command.classify.deleteClassify);\n                value = result.Continue;\n                messageCodeError = result.MessageCodeError;\n            }\n            if (value === undefined) value = true;\n            if (value) page.createClassify(command.classify);\n        }\n        resolver({ MessageCodeError: messageCodeError, Continue: value });\n        page.commit();\n    }\n}\n"]}