{"version":3,"sources":["enter/graphql.resolver.ts"],"names":[],"mappings":"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","file":"graphql.resolver.js","sourcesContent":["import { Mutation, Query, Resolver } from \"@nestjs/graphql\";\nimport { BlockEntity } from \"../entity/block.entity\";\nimport { SiteEntity } from \"../entity/site.entity\";\nimport { VisitEntity } from \"../entity/visit.entity\";\nimport { PagerService } from \"../export/common.paging\";\nimport { RegistrationService } from \"./registration.service\";\n\nfunction objToStrMap(obj): Map<string, string> {\n    const strMap = new Map();\n    if (obj) {\n        for (const k of Object.keys(obj)) {\n            strMap.set(k, obj[ k ]);\n        }\n    }\n    return strMap;\n}\n\n@Resolver()\nexport class EnterResolver {\n    constructor(private readonly registration: RegistrationService,\n                private readonly pagerService: PagerService) {\n    }\n\n    @Query(\"getAllVisits\")\n    async getAllVisits(obj, arg) {\n        const str: string = JSON.stringify(arg);\n        const bToJSon = JSON.parse(str);\n        let map = new Map();\n        map = objToStrMap(bToJSon);\n        const result = await this.registration.getVisit(map.get(\"limit\"), map.get(\"pages\"));\n        const paging = this.pagerService.getPager(result.totals, map.get(\"pages\"), map.get(\"limit\"));\n        return { pagination: paging, visits: result.visits };\n    }\n\n    @Query(\"getAllSites\")\n    async getAllSites(obj, arg) {\n        const str: string = JSON.stringify(arg);\n        const bToJSon = JSON.parse(str);\n        let map = new Map();\n        map = objToStrMap(bToJSon);\n        const result = await this.registration.getSite(map.get(\"limit\"), map.get(\"pages\")).then(a => {\n            return a;\n        });\n        const paging = this.pagerService.getPager(result.totals, map.get(\"pages\"), map.get(\"limit\"));\n        return { sites: result.sites, pagination: paging };\n    }\n\n    @Query(\"getAllBlocks\")\n    async getAllBlocks(obj, arg) {\n        const str: string = JSON.stringify(arg);\n        const bToJSon = JSON.parse(str);\n        let map = new Map();\n        map = objToStrMap(bToJSon);\n        const result = await this.registration.getAllBlocks(map.get(\"limit\"), map.get(\"pages\"));\n        const paging = this.pagerService.getPager(result.totals, map.get(\"pages\"), map.get(\"limit\"));\n        return { blocks: result.blocks, pagination: paging };\n    }\n\n    @Mutation(\"createBlocks\")\n    async createBlocks(obj, arg) {\n        const str: string = JSON.stringify(arg);\n        const bToJSon = JSON.parse(str);\n        let map = new Map();\n        map = objToStrMap(bToJSon);\n        const block: BlockEntity = map.get(\"block\");\n        const result = await this.registration.createBlock(block);\n        return JSON.stringify(result);\n    }\n\n    @Mutation(\"createSites\")\n    async createSites(obj, arg) {\n        const str: string = JSON.stringify(arg);\n        const bToJSon = JSON.parse(str);\n        let map = new Map();\n        map = objToStrMap(bToJSon);\n        const site: SiteEntity = map.get(\"site\");\n        if (site.eventDate) {\n            const date: string = site.eventDate.toString();\n            site.eventDate = new Date(Date.parse(date.replace(/- /g, \"/\")));\n        }\n        if (site.startTime) {\n            const date: string = site.startTime.toString();\n            site.startTime = new Date(Date.parse(date.replace(/- /g, \"/\")));\n        }\n        if (site.endTime) {\n            const date: string = site.endTime.toString();\n            site.endTime = new Date(Date.parse(date.replace(/- /g, \"/\")));\n        }\n        const result = await this.registration.createSite(site);\n        return JSON.stringify(result);\n    }\n\n    @Mutation(\"createVisits\")\n    async createVisits(obj, arg) {\n        const str: string = JSON.stringify(arg);\n        const bToJSon = JSON.parse(str);\n        let map = new Map();\n        map = objToStrMap(bToJSon);\n        const visit: VisitEntity = map.get(\"visit\");\n        const result = await this.registration.createVisit(visit);\n        return JSON.stringify(result);\n    }\n}\n"]}