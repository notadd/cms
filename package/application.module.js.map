{"version":3,"sources":["application.module.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,2CAAwF;AACxF,6CAAgE;AAChE,6CAAgD;AAChD,iEAAwE;AACxE,mDAA4C;AAS5C,IAAa,iBAAiB,GAA9B;IACI,YAA6B,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IAC3D,CAAC;IAGD,SAAS,CAAC,QAA6B;QACnC,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QACnC,QAAQ,CAAC,KAAK,CAAC,uCAAe,CAAC,EAAE,WAAW,EAAE,UAAU,EAAE,CAAC,CAAC;aACvD,SAAS,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,sBAAa,CAAC,GAAG,EAAE,CAAC;aAC3D,KAAK,CAAC,sCAAc,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;aAC1D,SAAS,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,sBAAa,CAAC,GAAG,EAAE,CAAC,CAAC;IAEpE,CAAC;IAED,YAAY;QACR,MAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,CAAC;QAE7E,OAAO,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC;IAC1D,CAAC;CACJ,CAAA;AAnBY,iBAAiB;IAP7B,eAAM,CAAC;QACJ,OAAO,EAAE;YACL,yBAAS;YACT,uBAAa;YACb,uBAAa,CAAC,OAAO,EAAE;SAC1B;KACJ,CAAC;qCAE+C,wBAAc;GADlD,iBAAiB,CAmB7B;AAnBY,8CAAiB","file":"application.module.js","sourcesContent":["import { MiddlewaresConsumer, Module, NestModule, RequestMethod } from \"@nestjs/common\";\nimport { GraphQLFactory, GraphQLModule } from \"@nestjs/graphql\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { graphiqlExpress, graphqlExpress } from \"apollo-server-express\";\nimport { CmsModule } from \"./cms.injection\";\n\n@Module({\n    imports: [\n        CmsModule,\n        GraphQLModule,\n        TypeOrmModule.forRoot(),\n    ],\n})\nexport class ApplicationModule implements NestModule {\n    constructor(private readonly graphqlFactory: GraphQLFactory) {\n    }\n\n    /*中间件设置*/\n    configure(consumer: MiddlewaresConsumer) {\n        const schema = this.createSchema();\n        consumer.apply(graphiqlExpress({ endpointURL: \"/graphql\" }))\n            .forRoutes({ path: \"/graphiql\", method: RequestMethod.GET })\n            .apply(graphqlExpress(req => ({ schema, rootValue: req })))\n            .forRoutes({ path: \"/graphql\", method: RequestMethod.ALL });\n\n    }\n\n    createSchema() {\n        const typeDefs = this.graphqlFactory.mergeTypesByPaths(\"**/*.types.graphql\");\n\n        return this.graphqlFactory.createSchema({ typeDefs });\n    }\n}\n"]}