{"version":3,"sources":["sitemap/sitemap.service.ts"],"names":[],"mappings":"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","file":"sitemap.service.js","sourcesContent":["import { Component } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\nimport { ArticleEntity } from \"../entity/article.entity\";\nimport { PageEntity } from \"../entity/page.entity\";\nimport { SitemapEntity } from \"../entity/sitemap.entity\";\n\n@Component()\nexport class SitemapService {\n    constructor(\n        @InjectRepository(ArticleEntity) private readonly artRepository: Repository<ArticleEntity>,\n        @InjectRepository(PageEntity) private readonly pageRepository: Repository<PageEntity>,\n        @InjectRepository(SitemapEntity) private readonly siteRepository: Repository<SitemapEntity>,\n    ) {\n    }\n\n    /**\n     * 设置参数\n     * @param arrayOptions\n     * @param {string} url\n     *\n     * @returns {Promise<void>}\n     */\n    public async commitXML(arrayOptions, url: string) {\n        let sitemap: SitemapEntity = await this.siteRepository.findOneById(1);\n        if (sitemap === null) {\n            sitemap = arrayOptions;\n            let fileName: string;\n            if (arrayOptions.xmlFileName) {\n                fileName = \"sitemap_baidu\";\n            } else {\n                fileName = \"sitemap\";\n            }\n            sitemap.xmlFileName = fileName;\n            await this.siteRepository.insert(sitemap);\n        } else {\n            sitemap = arrayOptions;\n            let fileName: string;\n            if (arrayOptions.xmlFileName) {\n                fileName = \"sitemap_baidu\";\n            } else {\n                fileName = \"sitemap\";\n            }\n            sitemap.xmlFileName = fileName;\n            if (arrayOptions.xmlSiteMap) sitemap.xmlSiteMap = arrayOptions.xmlSiteMap;\n            if (arrayOptions.pageSelect) sitemap.pageSelect = arrayOptions.pageSelect;\n            if (arrayOptions.postSelect) sitemap.postSelect = arrayOptions.postSelect;\n            if (arrayOptions.updateWhenPost) sitemap.updateWhenPost = arrayOptions.updateWhenPost;\n            if (arrayOptions.postLimit1000) sitemap.postLimit1000 = arrayOptions.postLimit1000;\n            await this.siteRepository.updateById(1, sitemap);\n        }\n    }\n\n    public async UpdateXMLFile($mes = 0, url: string) {\n        const sitemap: SitemapEntity = await this.siteRepository.findOneById(1);\n        if (sitemap.xmlSiteMap) {\n            this.buildSitemapXml(url);\n        }\n    }\n\n    /**\n     * 函数判断\n     * @returns {any[]}\n     */\n    public async getBaiduOptions(getBaiduOptions?) {\n        getBaiduOptions = await this.siteRepository.findOneById(1);\n        let arrayOptions = new SitemapEntity();\n        if (getBaiduOptions) {\n            arrayOptions = getBaiduOptions;\n        } else {\n            if (!arrayOptions) {\n                arrayOptions.xmlFileName = \"sitemap_baidu\";\n            }\n            if (!arrayOptions.xmlSiteMap) {\n                arrayOptions.xmlSiteMap = true;\n            }\n            if (!arrayOptions.updateWhenPost) {\n                arrayOptions.updateWhenPost = true;\n            }\n            if (!arrayOptions.postLimit1000) {\n                arrayOptions.postLimit1000 = false;\n            }\n            if (!arrayOptions.postSelect) {\n                arrayOptions.postSelect = true;\n            }\n            if (!arrayOptions.pageSelect) {\n                arrayOptions.pageSelect = true;\n            }\n        }\n        return arrayOptions;\n    }\n\n    /**\n     * 生成xml文件\n     * @param $xml_contents\n     * @param $mes\n     */\n    public async buildSitemapXml(url: string) {\n        const arrayOptions = await this.getBaiduOptions().then(a => {\n            return a;\n        });\n        let limit: number;\n        /*只更新最近1000篇文章*/\n        if (arrayOptions.postLimit1000) {\n            limit = 1000;\n        } else {\n            limit = 10000;\n        }\n        const fs = require(\"fs\");\n        const file = `${(process.cwd()).substring(0, (process.cwd()).lastIndexOf(\"/\"))}/public/`;\n        const ws = fs.createWriteStream(`${file}${arrayOptions.xmlFileName}.xml`);\n        const builder = require(\"xmlbuilder\");\n        const root = builder.create(\"urlset xmlns=\\\"http://www.sitemaps.org/schemas/sitemap/0.9\\\"\");\n        let num = 1;\n        /*链接包括文章*/\n        if (arrayOptions.postSelect) {\n            const mini: Array<ArticleEntity> = await this.artRepository.createQueryBuilder(\"art\").orderBy(\"art.updateAt\", \"DESC\").limit(limit / 2).getMany();\n            for (const t in mini) {\n                const newTime: Date = mini[ t ].updateAt;\n                const update: Date = newTime;\n                const item = root.ele(\"url\");\n                const sequence = num++;\n                item.ele(\"sequence\", sequence);\n                item.ele(\"loc\", `${url.replace(\"'\", \"\").replace(\"'\", \"\")}/${mini[ t ].name}`);\n                /*item.ele(\"loc\",\"https:/*docs.nestjs.com/recipes/cqrs\");*/\n                item.ele(\"changefreq\", \"weekly\");\n                item.ele(\"lastmod\", `${update.toLocaleDateString()} ${update.toLocaleTimeString()}`);\n            }\n        }\n        /*链接包括页面*/\n        if (arrayOptions.pageSelect) {\n            const mini: Array<PageEntity> = await this.pageRepository.createQueryBuilder(\"page\").orderBy(\"page.updateAt\", \"DESC\").limit(limit / 2).getMany();\n            for (const t in mini) {\n                const newTime: Date = mini[ t ].updateAt;\n                const update: Date = newTime;\n                const item = root.ele(\"url\");\n                const sequence = num++;\n                item.ele(\"sequence\", sequence);\n                item.ele(\"loc\", `${url.replace(\"'\", \"\").replace(\"'\", \"\")}/${mini[ t ].title}`);\n                /* item.ele(\"loc\",\"https:/*docs.nestjs.com/recipes/cqrs\");*/\n                item.ele(\"changefreq\", \"weekly\");\n                item.ele(\"lastmod\", `${update.toLocaleDateString()} ${update.toLocaleTimeString()}`);\n            }\n        }\n        root.end({ pretty: false });\n        ws.write(`<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<?xml-stylesheet type=\"text/xsl\" href=\"./sitemap.xsl\"?>\\n${root.toString().substring(0, root.toString().lastIndexOf(\"urlset\") + 6)}>`);\n        ws.end();\n    }\n}\n"]}