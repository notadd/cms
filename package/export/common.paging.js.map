{"version":3,"sources":["export/common.paging.ts"],"names":[],"mappings":";;AAAA,gCAAgC;AAEhC;IACI,QAAQ,CAAC,SAAiB,EAAE,YAAqB,EAAE,SAAkB;QAEjE,IAAI,SAAS,KAAK,IAAI,IAAI,SAAS,KAAK,CAAC,EAAE;YACvC,SAAS,GAAG,CAAC,CAAC;SACjB;QACD,IAAI,YAAY,KAAK,IAAI,IAAI,YAAY,KAAK,CAAC,EAAE;YAC7C,YAAY,GAAG,CAAC,CAAC;SACpB;QACD,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,CAAC;QACnD,IAAI,UAAkB,EAAE,QAAgB,CAAC;QACzC,IAAI,SAAS,IAAI,EAAE,EAAE;YAEjB,UAAU,GAAG,CAAC,CAAC;YACf,QAAQ,GAAG,SAAS,CAAC;SACxB;aAAM;YAEH,IAAI,YAAY,IAAI,CAAC,EAAE;gBACnB,UAAU,GAAG,CAAC,CAAC;gBACf,QAAQ,GAAG,EAAE,CAAC;aACjB;iBAAM,IAAI,YAAY,GAAG,CAAC,IAAI,SAAS,EAAE;gBACtC,UAAU,GAAG,SAAS,GAAG,CAAC,CAAC;gBAC3B,QAAQ,GAAG,SAAS,CAAC;aACxB;iBAAM;gBACH,UAAU,GAAG,YAAY,GAAG,CAAC,CAAC;gBAC9B,QAAQ,GAAG,YAAY,GAAG,CAAC,CAAC;aAC/B;SACJ;QAGD,MAAM,cAAc,GAAG,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC;QACtD,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,GAAG,SAAS,GAAG,CAAC,EAAE,SAAS,GAAG,CAAC,CAAC,CAAC;QAG7E,MAAM,UAAU,GAAG,CAAC,CAAC,KAAK,CAAC,UAAU,EAAE,QAAQ,GAAG,CAAC,CAAC,CAAC;QAErD,OAAO;YACH,UAAU,EAAE,SAAS;YACrB,WAAW,EAAE,YAAY;YACzB,QAAQ,EAAE,SAAS;YACnB,UAAU,EAAE,SAAS;YACrB,SAAS,EAAE,UAAU;YACrB,OAAO,EAAE,QAAQ;YACjB,UAAU,EAAE,cAAc;YAC1B,QAAQ,EAAE,YAAY;YACtB,KAAK,EAAE,UAAU;SACpB,CAAC;IACN,CAAC;CACJ;AAhDD,oCAgDC","file":"common.paging.js","sourcesContent":["import * as _ from \"underscore\";\n\nexport class PagerService {\n    getPager(totalItem: number, currentPages?: number, pagesSize?: number) {\n        /* calculate total pages*/\n        if (pagesSize === null || pagesSize === 0) {\n            pagesSize = 1;\n        }\n        if (currentPages === null || currentPages === 0) {\n            currentPages = 1;\n        }\n        const totalPage = Math.ceil(totalItem / pagesSize);\n        let startPages: number, endPages: number;\n        if (totalPage <= 10) {\n            /* less than 10 total pages so show all*/\n            startPages = 1;\n            endPages = totalPage;\n        } else {\n            /* more than 10 total pages so calculate start and end pages*/\n            if (currentPages <= 6) {\n                startPages = 1;\n                endPages = 10;\n            } else if (currentPages + 4 >= totalPage) {\n                startPages = totalPage - 9;\n                endPages = totalPage;\n            } else {\n                startPages = currentPages - 5;\n                endPages = currentPages + 4;\n            }\n        }\n\n        /* calculate start and end item indexes*/\n        const startIndexPage = (currentPages - 1) * pagesSize;\n        const endIndexPage = Math.min(startIndexPage + pagesSize - 1, totalItem - 1);\n\n        /* create an array of pages to ng-repeat in the pager control*/\n        const pagesArray = _.range(startPages, endPages + 1);\n        /* return object with all pager properties required by the view*/\n        return {\n            totalItems: totalItem,\n            currentPage: currentPages,\n            pageSize: pagesSize,\n            totalPages: totalPage,\n            startPage: startPages,\n            endPage: endPages,\n            startIndex: startIndexPage,\n            endIndex: endIndexPage,\n            pages: pagesArray,\n        };\n    }\n}\n"]}