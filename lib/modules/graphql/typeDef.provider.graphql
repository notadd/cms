type Article{
    #文章Id
    id:Int,
    #文章名
    name:String,
    #分类名称
    classify:String,
    #分类Id
    classifyId:Int,
    #文章地址
    url:Url,
    #来源
    source:String,
    #来源链接
    sourceUrl:Url,
    #置顶
    topPlace:stick,
    #是否隐藏
    hidden:Boolean,
    #删除(回收站)
    recycling:Boolean,
    #发布时间
    publishedTime:Date,
    #摘要
    abstract:String,
    #内容
    content:String,
    #创建时间
    createAt:Date,
    #修改时间
    updateAt:Date,
}
enum stick{
    global,
    current,
    Level1,
    Level2,
    Level3
}
input ArticleInput{
    #文章名
    name:String,
    #分类名称
    classify:String,
    #分类Id
    classifyId:Int,
    #摘要
    abstract:String,
    #内容
    content:String,
    #置顶
    topPlace:stick,
    #是否隐藏
    hidden:Boolean,
    #发布时间
    publishedTime:Date,
    #来源
    source:String,
    #来源链接
    sourceUrl:Url,
}
input ArticleUpdate{
    #文章Id
    id:Int,
    #文章名
    name:String,
    #分类名称
    classify:String,
    #分类Id
    classifyId:Int,
    #摘要
    abstract:String,
    #内容
    content:String,
    #置顶
    topPlace:stick,
    #是否隐藏
    hidden:Boolean,
    #发布时间
    publishedTime:Date,
    #来源
    source:String,
    #来源链接
    sourceUrl:Url,
}
type Classify{
    #分类Id
    id:Int,
    #分类名称
    classifyName:String,
    #分类别名
    classifyAlias:String,
    #内链
    chainUrl:String,
    #描述
    describe:String,
    #颜色
    color:String,
    #是否显示下一级分类文章
    showNext:Boolean,
    #父节点
    groupId:Int,
    #子节点
    childrens:[Classify],
}
input ClassifyCreate{
    #分类名称
    classifyName:String!,
    #分类别名
    classifyAlias:String!,
    #内链
    chainUrl:String,
    #描述
    describe:String,
    #颜色
    color:String,
    #父节点
    groupId:Int,
    #是否显示下一级分类文章
    showNext:Boolean,
}
type Query {
    getArticleAll(limitNum:Int!):[Article],
    keywordsSerach(keywords:String!,limitNum:Int!):[Article]
    getAllClassify(useFor:String!):[Classify],
}
type Mutation{
    deleteById(id:[Int]):Int,
    createArticle(createArt:ArticleInput!):[Article],
    updateArticle(updateArt:ArticleUpdate):[Article],
    recycleFind(limitNum:Int!):[Article],
    recycleDelete(id:[Int]):Int,
    reductionArticle(id:[Int]):[Article],
    createClassify(createClass:ClassifyCreate!,useFor:String):[Classify],

}